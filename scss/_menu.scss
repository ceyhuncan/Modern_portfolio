// Menu buttons
.menu-btn {
    position: absolute;
    z-index: 3;
    right: 35px;
    top: 35px;
    cursor: pointer;
    @include easeOut;

    // menu-button lines css
    .btn-line {
        width: 28px;
        height: 3px;
        margin: 0 0 5px 0;
        /* top | right | bottom | left */
        background: white;
        @include easeOut;
    }

    // Rotating menu-btn Lines and transforming to X. When it is clicked
    &.close {
        transform: rotate(180deg);

        .btn-line {

            //using pseudo classes to seleect elements

            //Line 1 - Rotate
            &:nth-child(1) {
                transform: rotate(45deg) translate(5px);
            }

            //Line 2 - Hide
            &:nth-child(2) {
                opacity: 0;
            }

            //Line 3 - Rotate
            &:nth-child(3) {
                transform: rotate(-45deg) translate(11px, -6px);
            }
        }
    }
}

//Menu Overlay
.menu {
    position: fixed;
    top: 0;
    width: 100%;
    opacity: 0.9;
    visibility: hidden;


    //menu-nav only visible when menu-btn pressed
    &.show {
        visibility: visible;
    }

    //Shaping menu-branding (left side) and menu-nav (right side)

    &-branding,
    &-nav {
        display: flex; // display horizontally
        flex-flow: column wrap; // wrap as column
        align-items: center;
        justify-content: center;
        float: left;
        width: 50%;
        height: 100vh;
        overflow: hidden; // We dont want overflow and visible mouse
    }

    //Now handle nav and branding seperately 
    &-nav {
        margin: 0;
        padding: 0;
        background: darken($primary-color, 5);
        list-style: none; // get rid of bullet points

        //it is being visible and invisible.But we want it to slide from the top.
        //For this purpose we can use transform:translate3D()

        transform: translate3d(0, -100%, 0);
        @include easeOut;

        //Slide in from the top
        &.show {
            transform: translate3d(0, 0, 0);
        }
    }


    &-branding {

        background: $primary-color;
        transform: translate3d(0, 100%, 0);
        @include easeOut;


        //Slide in from the bottom
        &.show {
            transform: translate3d(0, 0, 0);

        }

        .portrait {
            width: 250px;
            height: 250px;
            background: url(../img/portrait.jpg);
            border-radius: 50%; //Makes it circle
            background-size: cover;
            border: solid 3px $secondary-color;
        }
    }

    .nav-item {
        //it will be off the screen until we get the show.Start position.Same as others
        transform: translate3d(600px, 0, 0);
        @include easeOut;

        //Slide in from the right to left,when show class added.
        &.show {
            transform: translate3d(0, 0, 0);
        }
    }
}

/* Delay for each nav item slide by 0.1s.
We will use Sass for loop. 
Through 4 because we have 4 nav-item
it is similar to for(let x=0:i<4;i++)

#{$x}): # makes it a number
*/

@for $x from 1 through 4 {
    .nav-item:nth-child(#{$x}) {
        transition-delay: $x * 0.1s;

    }

}